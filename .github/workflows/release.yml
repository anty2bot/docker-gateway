name: Create Release

on:
  push:
    paths:
      - VERSION
  workflow_dispatch: # Manual trigger

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Tag
        id: set_tag
        run: |
         TAG_NAME=$(cat VERSION)
         echo "::set-output name=tag_name::$TAG_NAME"
         V2FLY_TAG_NAME=$(cat utils/v2fly.sha256 | awk -F '[: ]' '{print $2}')
         echo "::set-output name=v2fly_tag_name::$V2FLY_TAG_NAME"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: docker-gateway-${{  steps.set_tag.outputs.tag_name }}
          release_name: "Release ${{ steps.set_tag.outputs.tag_name }}"
          body: |
            Base on commit ${{ github.sha }} and v2fly ${{ steps.set_tag.outputs.v2fly_tag_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }}

      - name: Save Docker image to file
        run: |
          docker pull --platform linux/amd64 v2fly/v2fly-core:${{ steps.set_tag.outputs.v2fly_tag_name }}
          docker save -o "v2fly-${{ steps.set_tag.outputs.v2fly_tag_name }}.tar" v2fly/v2fly-core:${{ steps.set_tag.outputs.v2fly_tag_name }}

      - name: Upload Docker image
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: v2fly-${{ steps.set_tag.outputs.v2fly_tag_name }}.tar
          asset_name: v2fly-${{ steps.set_tag.outputs.v2fly_tag_name }}.tar
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }}
